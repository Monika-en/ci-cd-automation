pipeline {
    parameters {
        string(name: 'PROJECT_REPO', description: 'GitHub repository URL (e.g., https://github.com/your-username/your-repo)')
		string(name: 'REPO_BRANCH', defaultValue: 'main', description: 'Repository branch (e.g., main)')
    }

    agent { label 'ec2-linux' }

    stages {
        stage('Checkout') {
            steps {
                // Clone the GitHub repository specified as a parameter
                checkout([$class: 'GitSCM', branches: [[name: "*/${params.REPO_BRANCH}"]], userRemoteConfigs: [[url: params.PROJECT_REPO, credentialsId: 'monika-en']]])
            }
        }

        stage('Run cppcheck') {
            steps {
                script {
					sh 'cppcheck --enable=all --inconclusive --xml --xml-version=2 . 2> cppcheck.xml'
					sh 'rm -rf report'
					sh 'mkdir -p report'
					sh """cppcheck-htmlreport --source-dir=. --title=${env.JOB_BASE_NAME} --file=cppcheck.xml --report-dir=report"""
                }
            }
        }
    }
	post {
        failure{
			buildDescription "FAILURE"
		}
		success{
			buildDescription "SUCCESS"
		}
        always {
			archiveArtifacts artifacts: 'cppcheck.xml'
            archiveArtifacts artifacts: 'report/*.*'
            buildName "${env.JOB_BASE_NAME}_${env.BUILD_NUMBER}"
            withCredentials([string(credentialsId: 'Office_365_Connector_URL', variable: 'o365url')]){
                office365ConnectorSend (
                    webhookUrl: "${o365url}"
                )
            }
        }
    }
}
